# .github/workflows/build_apk.yml

name: Build Flutter APK (Fallback to Latest Stable)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      apk_path: ${{ steps.upload_artifact.outputs.artifact-path }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # --- المحاولة الأولى ---
      - name: Set up Flutter (Default Version)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Display Default Flutter Version
        run: flutter --version

      - name: Get Dependencies (Default)
        run: flutter pub get

      # *** تعديل هنا: تصحيح أوامر التنظيف ***
      - name: Clean Workspace (Before Default Build)
        run: |
          # شغّل flutter clean أولاً (يعمل من الجذر)
          flutter clean
          # شغّل أوامر android داخل مجلد android
          chmod +x gradlew # يشير إلى gradlew في المجلد الحالي (android)
          ./gradlew clean  # يشير إلى gradlew في المجلد الحالي (android)
        working-directory: ./android # تعيين مجلد العمل لهذه الخطوة

      - name: Build APK with Default Version (Allow Flutter check fail)
        id: build_default
        continue-on-error: true
        run: flutter build apk --release --verbose

      # --- التحقق ---
      - name: Check if Default Build Produced APK
        id: check_apk
        run: |
          if [[ -f build/app/outputs/flutter-apk/app-release.apk ]]; then
            echo "APK found after default build."
            echo "apk_exists=true" >> $GITHUB_OUTPUT
          else
            echo "APK not found after default build. Will try latest stable."
            echo "apk_exists=false" >> $GITHUB_OUTPUT
          fi

      # --- المحاولة الثانية (مشروطة) ---
      - name: Setup Latest Stable Flutter (if needed)
        if: steps.check_apk.outputs.apk_exists == 'false'
        run: |
          echo "Switching to latest stable Flutter..."
          flutter channel stable
          flutter upgrade
          flutter doctor -v

      - name: Get Dependencies (Latest Stable - if needed)
        if: steps.check_apk.outputs.apk_exists == 'false'
        run: flutter pub get

      # *** تعديل هنا أيضًا: تصحيح أوامر التنظيف للمحاولة الثانية ***
      - name: Clean Workspace (Before Latest Stable Build - if needed)
        if: steps.check_apk.outputs.apk_exists == 'false'
        run: |
          flutter clean
          chmod +x gradlew
          ./gradlew clean
        working-directory: ./android

      - name: Build APK with Latest Stable (if needed)
        id: build_latest
        if: steps.check_apk.outputs.apk_exists == 'false'
        run: flutter build apk --release --verbose

      # --- الرفع النهائي ---
      - name: Verify Final APK Existence and Size
        run: |
          echo "Checking for final APK at standard path..."
          ls -lh build/app/outputs/flutter-apk/app-release.apk || echo "APK still not found before upload."

      - name: List Build Output Directory
        if: always()
        run: |
          echo "Listing contents of build/app/outputs/:"
          ls -R build/app/outputs/ || echo "Output directory not found or inaccessible."

      - name: Upload APK Artifact
        id: upload_artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error
