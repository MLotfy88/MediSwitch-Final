name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # Install system CMake
      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build

      # Setup Android SDK
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # Install Android SDK components
      - name: Install Android SDK components
        run: |
          sdkmanager --install "platform-tools" "platforms;android-33" "build-tools;33.0.0" "ndk;25.1.8937393"
          echo "y" | sdkmanager --licenses

      # Setup Gradle with corrected memory settings
      - name: Setup Gradle
        run: |
          cd android
          chmod +x ./gradlew
          
          # Create gradle.properties with corrected memory settings
          cat << EOF > gradle.properties
          org.gradle.jvmargs=-Xmx4096M -Dfile.encoding=UTF-8
          org.gradle.daemon=false
          org.gradle.parallel=true
          android.useAndroidX=true
          android.enableJetifier=true
          android.defaults.buildfeatures.buildconfig=true
          android.nonTransitiveRClass=false
          android.ndkVersion=25.1.8937393
          EOF

          # Create local.properties
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
          echo "ndk.dir=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> local.properties

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      # NEW: Initialize Flutter project properly
      - name: Initialize Flutter
        run: |
          flutter pub get
          flutter clean
          cd android
          ./gradlew clean
          cd ..
          # Ensure the .dart_tool directory exists
          mkdir -p .dart_tool
          flutter pub get --verbose
          # Generate plugin registrant
          flutter pub run build_runner build --delete-conflicting-outputs || true

      # Create debug keystore (keeping this from previous solution)
      - name: Setup Debug Keystore
        run: |
          mkdir -p ~/.android
          keytool -genkey -v \
            -keystore ~/.android/debug.keystore \
            -storepass android \
            -alias androiddebugkey \
            -keypass android \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Android Debug,O=Android,C=US"

      # Verify environment
      - name: Verify Environment
        run: |
          cmake --version
          echo "ANDROID_SDK_ROOT = $ANDROID_SDK_ROOT"
          echo "JAVA_HOME = $JAVA_HOME"
          ls -la $ANDROID_SDK_ROOT/ndk
          which cmake
          echo "Flutter directory structure:"
          ls -la
          ls -la .dart_tool || echo ".dart_tool not found"

      # Build with proper initialization
      - name: Build APK
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          # Ensure we're in the right directory
          pwd
          # Show project structure
          ls -la
          # Build APK
          flutter build apk --release --verbose

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 5
