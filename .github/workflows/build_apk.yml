name: Build Signed Flutter Android APK with Slack Notify

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # إرسال إشعار ببدء الـ Workflow
      - name: Send Slack Notification - Start
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }} # استخدام الـ Secret
          SLACK_USERNAME: GitHub Actions CI
          SLACK_ICON_EMOJI: ':rocket:'
          SLACK_COLOR: '#007ec6' # لون أزرق
          SLACK_MESSAGE: '🚀 Build started for `${{ github.repository }}` triggered by `${{ github.actor }}` on branch `${{ github.ref_name }}`.'

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      - name: Get Flutter Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: printf "%s" "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.jks

      - name: Build Signed Release APK
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: |
          cd android
          ./gradlew assembleRelease
          cd ..

      # إعطاء معرف لهذه الخطوة للوصول إلى مخرجاتها
      - name: Upload Signed APK Artifact
        id: upload_artifact # المعرف
        uses: actions/upload-artifact@v4
        with:
          name: app-release-signed-apk
          path: android/build/app/outputs/apk/release/app-release.apk

      - name: Cleanup Keystore
        if: always()
        run: rm -f android/app/release.jks

      # إرسال إشعار بنجاح الـ Workflow مع رابط التحميل
      - name: Send Slack Notification - Success
        uses: rtCamp/action-slack-notify@v2
        if: success() # يعمل فقط إذا نجحت الخطوات السابقة
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: GitHub Actions CI
          SLACK_ICON_EMOJI: ':white_check_mark:'
          SLACK_COLOR: '#36a64f' # لون أخضر
          SLACK_MESSAGE: '✅ Build successful for `${{ github.repository }}`!\n<${{ steps.upload_artifact.outputs.artifact-url }}|Download Signed APK>' # استخدام مخرجات خطوة الرفع

  # خطوة منفصلة لإرسال إشعار في حالة الفشل
  notify_failure:
    runs-on: ubuntu-latest
    needs: build # يعتمد على انتهاء الـ job السابق
    if: failure() # يعمل فقط إذا فشل الـ job السابق
    steps:
      - name: Send Slack Notification - Failure
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: GitHub Actions CI
          SLACK_ICON_EMOJI: ':x:'
          SLACK_COLOR: '#ff0000' # لون أحمر
          SLACK_MESSAGE: '❌ Build failed for `${{ github.repository }}`.\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Workflow Run>'
