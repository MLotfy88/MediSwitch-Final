// android/settings.gradle (العودة للطريقة القديمة الأكثر تساهلاً)

pluginManagement {
    def flutterSdkRoot = System.getenv('FLUTTER_ROOT')
    if (flutterSdkRoot == null) {
        def localProperties = new Properties()
        def localPropertiesFile = new File(rootProject.projectDir, 'local.properties')
        if (localPropertiesFile.exists()) {
            localPropertiesFile.withReader('UTF-8') { reader ->
                localProperties.load(reader)
            }
            flutterSdkRoot = localProperties.getProperty('flutter.sdk')
        }
    }
    assert flutterSdkRoot != null, "Flutter SDK path not found. Define FLUTTER_ROOT environment variable or flutter.sdk in local.properties."

    // تضمين أدوات بناء Flutter لا يزال ضروريًا
    includeBuild("${flutterSdkRoot}/packages/flutter_tools/gradle")

    // المستودعات لإضافات Gradle نفسها
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

// *** تم حذف كتلة plugins {} بالكامل من هنا ***

// *** تم حذف كتلة dependencyResolutionManagement {} بالكامل من هنا ***
// سنسمح للمشاريع بتعريف مستودعاتها الخاصة إذا احتاجت (بما في ذلك إضافة Flutter)

// اسم المشروع الرئيسي
// rootProject.name = 'your_flutter_project_name' // يمكنك إلغاء التعليق وتعيين اسم إذا أردت

// تضمين وحدة التطبيق الرئيسية
include ':app'

// *** الكود القياسي القديم لتضمين الإضافات يدويًا ***
def flutterProjectRoot = rootProject.projectDir.parentFile
def pluginsFile = new File(flutterProjectRoot, '.flutter-plugins')
if (pluginsFile.exists()) {
    println 'Manually including plugins from .flutter-plugins'
    pluginsFile.readLines().each { line ->
        def parts = line.split('=')
        if (parts.length == 2) {
            def pluginName = parts[0]
            def pluginPath = parts[1].replace('\\', '/') // ضمان استخدام فواصل Linux
            include ":$pluginName"
            project(":$pluginName").projectDir = new File(flutterProjectRoot, pluginPath)
        } else {
             println "Skipping malformed line in .flutter-plugins: $line"
        }
    }
} else {
    println "Warning: .flutter-plugins file not found. This might be an issue."
}

// يمكنك إضافة الكود الخاص بـ .flutter-plugins-dependencies إذا كان موجودًا لديك
// def pluginsFileDependencies = new File(flutterProjectRoot, '.flutter-plugins-dependencies')
// if (pluginsFileDependencies.exists()) { ... }
