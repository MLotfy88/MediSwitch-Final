name: Build Android APK

env:
  BUILD_TIMESTAMP: '2025-03-29 13:27:01'  # تحديث التاريخ والوقت
  BUILDER: 'MLotfy88'  # تحديث اسم المستخدم
  GRADLE_VERSION: '8.10.2'  # تحديث إصدار Gradle
  CMAKE_VERSION: '3.22.1'
  NDK_VERSION: '25.1.8937393'

permissions:
  contents: write
  actions: write
  checks: write
  deployments: write
  pages: write
  pull-requests: write
  security-events: write
  statuses: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Install CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake ninja-build
          cmake --version

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        
      - name: Install Android SDK components
        run: |
          sdkmanager --install \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.0" \
            "ndk;${{ env.NDK_VERSION }}" \
            "cmake;${{ env.CMAKE_VERSION }}"
          echo "y" | sdkmanager --licenses

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
          cache: true

      # تحديث إعدادات Gradle مع إزالة MaxPermSize
      - name: Configure Gradle
        working-directory: android
        run: |
          mkdir -p ~/.gradle
          cat << EOF > ~/.gradle/gradle.properties
          org.gradle.java.home=$JAVA_HOME
          org.gradle.jvmargs=-Xmx4g -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError -XX:+UseParallelGC
          org.gradle.daemon=true
          org.gradle.parallel=true
          org.gradle.configureondemand=true
          org.gradle.caching=true
          android.useAndroidX=true
          android.enableJetifier=true
          android.enableR8=true
          android.enableD8=true
          android.ndkVersion=${{ env.NDK_VERSION }}
          EOF
          
          chmod +x ./gradlew
          
          # تحديث wrapper مع إصدار Gradle الجديد
          ./gradlew wrapper --gradle-version=${{ env.GRADLE_VERSION }} --distribution-type=bin

      - name: Setup Debug Keystore
        run: |
          mkdir -p ~/.android
          keytool -genkey -v \
            -keystore ~/.android/debug.keystore \
            -storepass android \
            -alias androiddebugkey \
            -keypass android \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -dname "CN=Android Debug,O=Android,C=US"

      - name: Setup Flutter build tools
        run: |
          flutter config --no-analytics
          flutter precache
          flutter doctor --android-licenses
          flutter doctor -v

      - name: Project Setup
        run: |
          flutter clean
          flutter pub get
          cd android
          ./gradlew clean --no-daemon
          ./gradlew dependencies --no-daemon
          cd ..

      - name: Build APK
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          ANDROID_NDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}/ndk/${{ env.NDK_VERSION }}
        run: |
          echo "Building with configuration:"
          echo "JAVA_HOME: $JAVA_HOME"
          echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
          echo "ANDROID_NDK_ROOT: $ANDROID_NDK_ROOT"
          
          flutter build apk \
            --release \
            --verbose \
            --target-platform android-arm64

      - name: Create Build Info
        run: |
          {
            echo "Build Information"
            echo "================"
            echo "Build Timestamp: ${{ env.BUILD_TIMESTAMP }}"
            echo "Builder: ${{ env.BUILDER }}"
            echo ""
            echo "Environment Details"
            echo "==================="
            echo "Java Version: $(java -version 2>&1 | head -n 1)"
            echo "Gradle Version: ${{ env.GRADLE_VERSION }}"
            echo "CMake Version: ${{ env.CMAKE_VERSION }}"
            echo "NDK Version: ${{ env.NDK_VERSION }}"
            echo "Flutter Version: $(flutter --version | head -n 1)"
            echo "Dart Version: $(dart --version)"
          } > build_info.txt

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: error

      - name: Upload Build Info
        uses: actions/upload-artifact@v4
        with:
          name: build-info
          path: build_info.txt
          retention-days: 30
